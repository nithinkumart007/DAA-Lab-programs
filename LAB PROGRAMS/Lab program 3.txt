//LAB PROGRAM 3 MERGE SORT
import java.util.Random;
import java.util.Scanner;
public class mergesort {
void merge(int[] array,int low, int mid,int high)
{
int i=low; /left array with i value low to mid/
int j=mid+1; /right array with j value mid+1 to high/
int k=low;
int resarray[]=new int[100]; /new Array with k value low to high/
while(i<=mid&&j<=high)
{
if(array[i]<array[j]) /compare the elements in subarray and/
{ /copy smallest element in new array/
resarray[k]=array[i];
i++;
k++;
}
else
{
resarray[k]=array[j];
j++;
k++;
}
}
while(i<=mid) /copy the remaining elements into the new array/
resarray[k++]=array[i++];
while(j<=high)
resarray[k++]=array[j++];
for(int m=low;m<=high;m++)
array[m]=resarray[m];
}
void sort( int[] array,int low,int high)
{
if(low<high)
{
int mid=(low+high)/2;
sort(array,low,mid);
sort(array,mid+1,high);
merge(array,low,mid,high);
}
}
public static void main(String[] args) {
mergesort m=new mergesort();
int array[]=new int[100];
int i;
System.out.println("Enter the array size");
Scanner sc =new Scanner(System.in);
int n=sc.nextInt();
Random generator=new Random();
for( i=0;i<n;i++)
array[i]=generator.nextInt(20);
System.out.println("Array before sorting");
for( i=0;i<n;i++)
System.out.println(array[i]+" ");
long startTime=System.nanoTime();
m.sort(array,0,n-1);
long stopTime=System.nanoTime();
long elapseTime=(stopTime-startTime);
System.out.println("Time taken to sort array is:"+elapseTime+"nanoseconds");
System.out.println("Sorted array is");
for(i=0;i<n;i++)
System.out.println(array[i]);
}
}