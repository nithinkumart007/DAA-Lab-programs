//LAB PROGRAM 8 Floyds
import java.util.*;
public class Floyds {
    void flyd(int[][] w,int n)
{
int i,j,k;
for(k=1;k<=n;k++)
for(i=1;i<=n;i++)
for(j=1;j<=n;j++)
w[i][j]=Math.min(w[i][j], w[i][k]+w[k][j]);
}
public static void main(String[] args) {
int a[][]=new int[10][10];
int n,i,j;

System.out.println("enter the number of vertices");
Scanner sc=new Scanner(System.in);
n=sc.nextInt();
System.out.println("Enter the weighted matrix");
for(i=1;i<=n;i++)
for(j=1;j<=n;j++)
a[i][j]=sc.nextInt();
Floyds f=new Floyds();
f.flyd(a, n);
System.out.println("The shortest path matrix is");
for(i=1;i<=n;i++)
{
for(j=1;j<=n;j++)
{
System.out.print(a[i][j]+" ");
}
System.out.println();
}
}

}

//OUTPUT

enter the number of vertices
5
Enter the weighted matrix
0 3 99 99 99
99 0 99 99 3
3 99 0 8 99
6 2 99 0 99
99 99 99 1 0
The shortest path matrix is
0 3 99 7 6 
10 0 99 4 3 
3 6 0 8 9 
6 2 99 0 5 
7 3 99 1 0 